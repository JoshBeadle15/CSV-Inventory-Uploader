# AIMSii API Configuration
# Base URL for AIMSii API (used for initial GetEndpoint authentication call)
# Default: https://active-ewebservice.biz/aeservices30/api
AIMSII_BASE_URL=https://active-ewebservice.biz/aeservices30/api

# AIMSii API credentials
AIMSII_API_KEY=your_aimsii_api_key_here
AIMSII_USERNAME=your_aimsii_username
AIMSII_PASSWORD=your_aimsii_password

# Inventory endpoint (appended to the authenticated endpoint domain)
AIMSII_INVENTORY_ENDPOINT=/api/inventory

# Shopify API Configuration
SHOPIFY_STORE=your-store-name
SHOPIFY_ACCESS_TOKEN=your_shopify_admin_api_token_here
SHOPIFY_API_VERSION=2024-07

# AI Provider Configuration
# Choose which AI service to use: "openai" or "gemini"
# Gemini is typically 10-20x cheaper than OpenAI
# Gemini is primary with OpenAI as fallback
AI_PROVIDER=gemini

# OpenAI Configuration (if AI_PROVIDER=openai)
OPENAI_API_KEY=your_openai_api_key_here
OPENAI_MODEL=gpt-4o

# Google Gemini Configuration (if AI_PROVIDER=gemini)
# Get your API key from: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here
# Recommended: gemini-1.5-flash for cost-effectiveness, gemini-1.5-pro for quality
GEMINI_MODEL=gemini-1.5-flash

# Sync Configuration
# Check interval in hours (how often to run the sync)
CHECK_INTERVAL_HOURS=24

# Lookback period in hours (fetch records created within this time)
LOOKBACK_HOURS=24

# Filter by category (true/false)
FILTER_BY_CATEGORY=true

# Allowed categories (comma-separated list)
# Example: Electronics,Accessories,Cables
ALLOWED_CATEGORIES=Electronics,Accessories

# Batch size: Number of products to process per run (default: 10)
# Use smaller values (e.g., 2-5) for initial testing
BATCH_SIZE=10

# Focus categories: Override ALLOWED_CATEGORIES for current run
# Leave empty to use ALLOWED_CATEGORIES
# Example: Electronics,Cables
FOCUS_CATEGORIES=

# Review mode: Process batch, log results, and exit for manual review (default: true)
# When true: Processes only BATCH_SIZE products, logs summary, and exits
# When false: Full auto mode - processes all products without stopping
# Recommended: Keep true for safety and quality control
REVIEW_MODE=true

# Multi-Location Inventory Configuration
# Enable multi-location inventory updates (default: false)
# When true: Updates inventory at specific Shopify locations
# AI will auto-detect location-specific quantity fields in your data
ENABLE_LOCATION_UPDATES=false

# Specific Shopify location names (comma-separated, optional)
# Leave empty to use all available locations
# Example: Warehouse,Storefront or gid://shopify/Location/123,gid://shopify/Location/456
SHOPIFY_LOCATIONS=

# AIMSii Location ID to Name Mapping
# Maps numeric location IDs from AIMSii to friendly location names
# Format: id:name,id:name (e.g., "1:Bozeman,2:Billings")
# This tells the system how to interpret location-specific quantity fields
# Example: If AIMSii has "qty_1" field, it will be mapped to "Bozeman" location
# Default: 1:Bozeman,2:Billings
AIMSII_LOCATION_MAPPING=1:Bozeman,2:Billings

# AIMSii Location Quantity Field Patterns (comma-separated)
# Patterns to detect location-specific quantity fields in AIMSii data
# Use {id} as placeholder for location ID
# Examples: qty_1, location_1_qty, quantity_1, 1_qty
# Default: qty_{id},location_{id}_qty,quantity_{id},{id}_qty
AIMSII_LOCATION_QTY_PATTERNS=qty_{id},location_{id}_qty,quantity_{id},{id}_qty

# Update existing products' inventory (default: true when ENABLE_LOCATION_UPDATES=true)
# When false: Only creates new products, skips inventory updates for existing ones
UPDATE_EXISTING_INVENTORY=true

# Location cache duration in milliseconds (default: 3600000 = 1 hour)
# Reduces API calls by caching location data
LOCATION_CACHE_DURATION=3600000

# Retry Configuration
RETRY_MAX_ATTEMPTS=3
RETRY_INITIAL_DELAY=1000
RETRY_MAX_DELAY=10000
RETRY_BACKOFF_MULTIPLIER=2

# Field Mapping (AIMSii field names)
# Customize these based on your AIMSii data structure
AIMSII_FIELD_TITLE=name
AIMSII_FIELD_DESCRIPTION=description
AIMSII_FIELD_VENDOR=brand
AIMSII_FIELD_TYPE=category
AIMSII_FIELD_TAGS=tags
AIMSII_FIELD_PRICE=price
# REQUIRED: SKU field is used for duplicate detection in Shopify
# This prevents the same product from being created multiple times
AIMSII_FIELD_SKU=sku
AIMSII_FIELD_QUANTITY=quantity
AIMSII_FIELD_IMAGE=imageUrl

# Additional Settings
# Create products as drafts (true) or published (false)
CREATE_AS_DRAFT=true

# Run once and exit (true) or keep running on schedule (false)
RUN_ONCE=false

# Dry run mode - don't actually create products (for testing)
DRY_RUN=false

# AI Learning Configuration
# Enable automatic field mapping discovery (recommended for first-time setup)
AI_ENABLE_FIELD_MAPPING=true

# Enable transformation caching to reduce AI costs (highly recommended)
AI_ENABLE_TRANSFORM_CACHE=true

# Number of sample products to analyze for field mapping generation
AI_MAPPING_SAMPLE_SIZE=5

# Similarity threshold for using cached templates (0.0-1.0, default 0.7)
# Higher = more strict matching, lower = more cache hits
AI_CACHE_SIMILARITY=0.7

# Maximum transformation examples to keep per product template
AI_MAX_EXAMPLES_PER_TEMPLATE=5

# Backend server configuration (for development only)
PORT=5001

# Backend API URL (optional - defaults to http://localhost:5001)
# Only change this if running the backend server on a different host/port
BACKEND_API_URL=http://localhost:5001
